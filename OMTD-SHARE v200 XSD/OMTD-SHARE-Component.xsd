<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2013 sp1 (http://www.altova.com) by ï»¿pl (pl) -->
<xs:schema xmlns:ms="http://www.meta-share.org/OMTD-SHARE_XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.meta-share.org/OMTD-SHARE_XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.0.1" xml:lang="en">
	<xs:include schemaLocation="./OMTD-SHARE-GlobalTypes.xsd"/>
	<xs:include schemaLocation="./OMTD-SHARE-ResourceCommon.xsd"/>
	<xs:complexType name="componentInfoType">
		<xs:annotation>
			<xs:appinfo>
				<render-short>{identificationInfo/resourceName}</render-short>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="resourceType" fixed="component">
				<xs:annotation>
					<xs:documentation>Specifies the type of the resource being described</xs:documentation>
					<xs:appinfo>
						<label>Resource type</label>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="component">
							<xs:annotation>
								<xs:documentation>A piece of  software typically for a specific technical purpose, such as a particular implementation of a part-of-speech tagger (e.g TreeTagger), a tree parsing program (e.g. mstparser), etc.; it is wrapped in a standard way within a particular component-oriented framework such as UIMA, GATE, etc. or as a specific type of web service.</xs:documentation>
								<xs:appinfo>
									<label>Component</label>
									<label-plural>Components</label-plural>
									<usage>Show the hierarchy in the forms, using 'broader' relations; if possible, put synonyms (exactMatch) inside parentheses</usage>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="ms:identificationInfo"/>
			<xs:element ref="ms:versionInfo"/>
			<xs:element ref="ms:contactInfo"/>
			<xs:element name="validationInfos" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:validationInfo" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ms:usageInfo" minOccurs="0"/>
			<xs:element ref="ms:resourceDocumentationInfo" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>
						<recommended>true</recommended>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ms:resourceCreationInfo" minOccurs="0"/>
			<xs:element name="componentType">
				<xs:annotation>
					<xs:documentation>Specifies the type of a component, in terms of the function/task it performs; please, note that the ontology is under revision</xs:documentation>
					<xs:appinfo>
						<relation>one-to-many</relation>
						<label>Type of component</label>
						<label-plural>Types of component</label-plural>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
						<xs:enumeration value="accessComponent">
							<xs:annotation>
								<xs:documentation>A component used for providing access to data resources</xs:documentation>
								<xs:appinfo>
									<label>Access component</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="reader">
							<xs:annotation>
								<xs:documentation>A component that reads content of various types (pdf, txt, xml etc.)</xs:documentation>
								<xs:appinfo>
									<label>Reader</label>
									<xs:broader>accessComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="writer">
							<xs:annotation>
								<xs:documentation>A component that writes processing results in various formats</xs:documentation>
								<xs:appinfo>
									<label>Writer</label>
									<xs:broader>accessComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="supportComponent">
							<xs:annotation>
								<xs:documentation>A component that provides support to developers</xs:documentation>
								<xs:appinfo>
									<label>Support component</label>
									<xs:exactMatch>helper</xs:exactMatch>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="visualiser">
							<xs:annotation>
								<xs:documentation>A component or interface that renders the contents of a resource in a graphic way for visualisation purposes</xs:documentation>
								<xs:appinfo>
									<label>Visualiser</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="debugger">
							<xs:annotation>
								<xs:documentation>A component that helps in the debugging process</xs:documentation>
								<xs:appinfo>
									<label>Debugger</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="validator">
							<xs:annotation>
								<xs:documentation>A component used to confirm that a system/resource meets the specifications and fulfills its intended purpose</xs:documentation>
								<xs:appinfo>
									<label>Validator</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="viewer">
							<xs:annotation>
								<xs:documentation>A component that provides access to the contents of a resource but intended only for access by humans</xs:documentation>
								<xs:appinfo>
									<label>Viewer</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="corpusViewer">
							<xs:annotation>
								<xs:documentation>A component that provides access to the contents of a corpus but intended only for access by humans</xs:documentation>
								<xs:appinfo>
									<label>Corpus viewer</label>
									<xs:broader>viewer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="lexiconViewer">
							<xs:annotation>
								<xs:documentation>A component that provides access to the contents of a lexical/conceptual resoruces but intended only for access by humans</xs:documentation>
								<xs:appinfo>
									<label>Lexicon viewer</label>
									<xs:broader>viewer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="editor">
							<xs:annotation>
								<xs:documentation>A component that allows humans to edit the contents of a resource</xs:documentation>
								<xs:appinfo>
									<label>Editor</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="mlTrainer">
							<xs:annotation>
								<xs:documentation>A component that is used in training models for machine learning</xs:documentation>
								<xs:appinfo>
									<label>Trainer of Machine Learning models</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="mlPredictor">
							<xs:annotation>
								<xs:documentation>A component that is used in predicting based on machine learning models</xs:documentation>
								<xs:appinfo>
									<label>Machine Learning Predictor</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="featureExtractor">
							<xs:annotation>
								<xs:documentation>A component that is used for extracting features</xs:documentation>
								<xs:appinfo>
									<label>Feature extractor</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="dataSplitter">
							<xs:annotation>
								<xs:documentation>A component that performs data splitting for cross validation purposes</xs:documentation>
								<xs:appinfo>
									<label>Data splitter</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="dataMerger">
							<xs:annotation>
								<xs:documentation>A component that supports data merging from various sources</xs:documentation>
								<xs:appinfo>
									<label>Data merger</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="converter">
							<xs:annotation>
								<xs:documentation>A component that performs conversion between formats of a resource</xs:documentation>
								<xs:appinfo>
									<label>Converter</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="dependencyConverter">
							<xs:annotation>
								<xs:documentation>A component that converts a constituency tree into a dependency tree</xs:documentation>
								<xs:appinfo>
									<label>Dependency converter</label>
									<xs:broader>converter</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="dependencyParser">
							<xs:annotation>
								<xs:documentation>A component that generates a dependency tree from typically token and POS annotations</xs:documentation>
								<xs:appinfo>
									<label>Dependency parser</label>
									<xs:broader>parser</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="constituencyParser">
							<xs:annotation>
								<xs:documentation>A component that a constituency tree from typically token and POS annotations</xs:documentation>
								<xs:appinfo>
									<label>Constituency parser</label>
									<xs:broader>parser</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="evaluator">
							<xs:annotation>
								<xs:documentation>A component that is used in the evaluation of the performance of a component</xs:documentation>
								<xs:appinfo>
									<label>Evaluator</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="flowController">
							<xs:annotation>
								<xs:documentation>A component that supports controlling flows</xs:documentation>
								<xs:appinfo>
									<label>Flow controller</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="scriptBasedAnalyser">
							<xs:annotation>
								<xs:documentation>A component that performs analysis tasks based on a script</xs:documentation>
								<xs:appinfo>
									<label>Script-based analyser</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="matcher">
							<xs:annotation>
								<xs:documentation>A component that allows matching (mapping) of elements</xs:documentation>
								<xs:appinfo>
									<label>Matcher</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="gazeteerBasedMatcher">
							<xs:annotation>
								<xs:documentation>A component that allows matching of elements based on a gazeteer</xs:documentation>
								<xs:appinfo>
									<label>Gazeteer based matcher</label>
									<xs:broader>matcher</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="crowdSourcingComponent">
							<xs:annotation>
								<xs:documentation>A component that supports crowd sourcing operations</xs:documentation>
								<xs:appinfo>
									<label>Crowdsourcing component</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="dataCollector">
							<xs:annotation>
								<xs:documentation>A component that collects (retrieves) data from various sources</xs:documentation>
								<xs:appinfo>
									<label>Data collector</label>
									<xs:broader>supportComponent</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="crawler">
							<xs:annotation>
								<xs:documentation>A component that crawls the web and collects data from various web sites</xs:documentation>
								<xs:appinfo>
									<label>Crawler</label>
									<xs:broader>dataCollector</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="processor">
							<xs:annotation>
								<xs:documentation>A component that is used in processing operations</xs:documentation>
								<xs:appinfo>
									<label>Processor</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="annotator">
							<xs:annotation>
								<xs:documentation>A component that annotates any language data (text, video, audio etc.), i.e. adds any descriptive or analytic notations (structural, linguistic, etc) to raw language data</xs:documentation>
								<xs:appinfo>
									<label>Annotator</label>
									<xs:broader>processor</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="segmenter">
							<xs:annotation>
								<xs:documentation>A component that segments a text into structural untis (chapters, paragraphs, sentences, words, tokens etc.)</xs:documentation>
								<xs:appinfo>
									<label>Segmenter</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="stemmer">
							<xs:annotation>
								<xs:documentation>A component that extracts stems from words in a text, usually by removing the most common morphological and inflectional endings from words</xs:documentation>
								<xs:appinfo>
									<label>Stemmer</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="lemmatizer">
							<xs:annotation>
								<xs:documentation>A component that annotates the tokens of a text with lemma information</xs:documentation>
								<xs:appinfo>
									<label>Lemmatizer</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="morphologicalTagger">
							<xs:annotation>
								<xs:documentation>A component that annotates tokens of a text with morphological information (part-of-speech and morphological features)</xs:documentation>
								<xs:appinfo>
									<label>Morphological tagger</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="chunker">
							<xs:annotation>
								<xs:documentation>A component that groups tokens of a text into chunks</xs:documentation>
								<xs:appinfo>
									<label>Chunker</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="parser">
							<xs:annotation>
								<xs:documentation>A component that takes as input text and returns a form of data structure (e.g. syntactic parse as a tree, or bracketed structure etc.)</xs:documentation>
								<xs:appinfo>
									<label>Parser</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="coreferenceAnnotator">
							<xs:annotation>
								<xs:documentation>A component that annotates tokens of a text with coreference information, i.e. annotating expressions that refer to the same entity in the text</xs:documentation>
								<xs:appinfo>
									<label>Co-reference annotator</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="namedEntityRecognizer">
							<xs:annotation>
								<xs:documentation>A component that seeks to locate and classify elements in a text into pre-defined categories such as the names of persons, organizations, locations, expressions of times, etc.</xs:documentation>
								<xs:appinfo>
									<label>Named entitity recognizer</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="semanticsAnnotator">
							<xs:annotation>
								<xs:documentation>A component that annotates the tokens of a text with semantic features</xs:documentation>
								<xs:appinfo>
									<label>Semantics annotator</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="srlAnnotator">
							<xs:annotation>
								<xs:documentation>A component that annotates the tokens of a text with Semantic Role labels</xs:documentation>
								<xs:appinfo>
									<label>Annotator of semantic role labels</label>
									<xs:broader>semanticsAnnotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="readabilityAnnotator">
							<xs:annotation>
								<xs:documentation>A component that annotates the tokens of a text with readability scores</xs:documentation>
								<xs:appinfo>
									<label>Readability annotator</label>
									<xs:broader>semanticsAnnotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="aligner">
							<xs:annotation>
								<xs:documentation>A component that detects and annotates equivalence relations between items (corpora, texts, paragraphs, sentences, phrases, words) in two languages</xs:documentation>
								<xs:appinfo>
									<label>Aligner</label>
									<xs:broader>annotator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="generator">
							<xs:annotation>
								<xs:documentation>A component that generates (semi-)automatically natural language texts (based on non-linguistic data, keywords, logical forms, knowledge bases...)</xs:documentation>
								<xs:appinfo>
									<label>Generator</label>
									<xs:broader>processor</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="summarizer">
							<xs:annotation>
								<xs:documentation>A component that produces a natural language synopsis of a longer text</xs:documentation>
								<xs:appinfo>
									<label>Summarizer</label>
									<xs:broader>generator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="simplifier">
							<xs:annotation>
								<xs:documentation>A component that outputs a simpler rendition of a given item (sentence, text etc.)</xs:documentation>
								<xs:appinfo>
									<label>Simplifier</label>
									<xs:broader>generator</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="preOrPostProcessingComponent">
							<xs:annotation>
								<xs:documentation>A component that is used at pre- or post-processing stages in order to normalize input/output</xs:documentation>
								<xs:appinfo>
									<label>Pre- or post-processing component</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="spellingChecker">
							<xs:annotation>
								<xs:documentation>A component that corrects spelling mistakes in a text</xs:documentation>
								<xs:appinfo>
									<xs:broader>preOrPostProcessor</xs:broader>
									<label>Spelling checker</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="grammarChecker">
							<xs:annotation>
								<xs:documentation>A component that corrects grammatical mistakes in a text</xs:documentation>
								<xs:appinfo>
									<label>Grammar checker</label>
									<xs:broader>preOrPostProcessor</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="normalizer">
							<xs:annotation>
								<xs:documentation>A component that removes unwanted material from text, usually as a pre-processing step</xs:documentation>
								<xs:appinfo>
									<label>Normalizer</label>
									<xs:broader>preOrPostProcessor</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="filters">
							<xs:annotation>
								<xs:documentation>A component that is used for filtering text input or annotations based on specific criteria</xs:documentation>
								<xs:appinfo>
									<label>Filters</label>
									<xs:broader>preOrPostProcessor</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="analyzer">
							<xs:annotation>
								<xs:documentation>A component that is used for analysing an input text in order to perform extraction of features/information (e.g. word list), or characterization of the whole text</xs:documentation>
								<xs:appinfo>
									<label>Analyzer</label>
									<xs:closeMatch>extractor</xs:closeMatch>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="topicExtractor">
							<xs:annotation>
								<xs:documentation>A component that guesses the topic of a text</xs:documentation>
								<xs:appinfo>
									<label>Topic extractor</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="documentClassifier">
							<xs:annotation>
								<xs:documentation>A component that tries to classify a document into one or more categories</xs:documentation>
								<xs:appinfo>
									<label>Document classifier</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="languageIdentifier">
							<xs:annotation>
								<xs:documentation>A component that identifies the language of a given text based on its contents</xs:documentation>
								<xs:appinfo>
									<label>Language identifier</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="sentimentAnalyzer">
							<xs:annotation>
								<xs:documentation>A component that tries to identify sentences that express the authorâs negative or positive feelings on something; (Sentiment analysis (also known as opinion mining) refers to the use of natural language processing, text analysis and computational linguistics to identify and extract subjective information in source materials (wikipedia) )</xs:documentation>
								<xs:appinfo>
									<xs:closeMatch>opinionMiningTool</xs:closeMatch>
									<label>Sentiment analyzer</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="emotionRecognizer">
							<xs:annotation>
								<xs:documentation>A component that tries to recognize and annotate emotions (e.g. fear, anger, happiness etc.) from text, video, audio and image</xs:documentation>
								<xs:appinfo>
									<label>Emotion recognizer</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="keywordsExtractor">
							<xs:annotation>
								<xs:documentation>A component that tries to extract keywords from a given text</xs:documentation>
								<xs:appinfo>
									<label>Keyword extractor</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="termExtractor">
							<xs:annotation>
								<xs:documentation>A component that tries to extract terms from a corpus</xs:documentation>
								<xs:appinfo>
									<label>Term extractor</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="contradictionDetector">
							<xs:annotation>
								<xs:documentation>A component that tries to automatically recognise elements that reveal contradiction in a text</xs:documentation>
								<xs:appinfo>
									<xs:broader>analyzer</xs:broader>
									<label>Contradiction detector</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="eventExtractor">
							<xs:annotation>
								<xs:documentation>A component that tries to extract information related to incidents referred to in a text</xs:documentation>
								<xs:appinfo>
									<xs:broader>analyzer</xs:broader>
									<label>Event extractor</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="persuasiveExpressionMiner">
							<xs:annotation>
								<xs:documentation>A component that tries to identify persuasive expressions in a given text</xs:documentation>
								<xs:appinfo>
									<label>Persuasive expression miner</label>
									<xs:broader>analyzer</xs:broader>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="informationExtractor">
							<xs:annotation>
								<xs:documentation>A component that automatically extracts structured information from unstructured and/or semi-structured machine-readable documents</xs:documentation>
								<xs:appinfo>
									<xs:broader>analyzer</xs:broader>
									<label>Information extractor</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="lexiconExtractorFromCorpora">
							<xs:annotation>
								<xs:documentation>A component that extracts structured lexical resources from corpora</xs:documentation>
								<xs:appinfo>
									<xs:broader>analyzer</xs:broader>
									<label>Lexicon extractor from corpora</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="lexiconExtractorFromLexica">
							<xs:annotation>
								<xs:documentation>A component that extracts specific lexical information contained in other lexica</xs:documentation>
								<xs:appinfo>
									<xs:broader>analyzer</xs:broader>
									<label>Lexicon extractor from lexica</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="wordSenseDisambiguator">
							<xs:annotation>
								<xs:documentation>A component that tries to identify which sense of a word (i.e. meaning) is used in a sentence, when the word has multiple meanings (Source: wikipedia)</xs:documentation>
								<xs:appinfo>
									<xs:broader>analyzer</xs:broader>
									<label>Word sense disambiguator</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="other">
							<xs:annotation>
								<xs:documentation>Value for componentType, to be used when the desired value is not included in the listed values</xs:documentation>
								<xs:appinfo>
									<label>Other</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<!--
						<xs:enumeration value="platform">
							<xs:annotation>
								<xs:documentation>A technology that eases the development and/or execution of new software programmes</xs:documentation>
								<xs:appinfo>
									<label>Platform</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="nlpDevelopmentEnvironment">
							<xs:annotation>
								<xs:documentation>A technology that supports the development of data resources, like lexicons, grammars, corpora, etc.; it can be included in an Architecture or in a Platform</xs:documentation>
								<xs:appinfo>
									<label>NLP development environment</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
-->
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="application" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Indicates whether the component can be used as an integrated end-user application</xs:documentation>
					<xs:appinfo>
						<label>Application</label>
						<label-plural>Applications</label-plural>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="applicationFunction" type="ms:applicationType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Specifies the type of an end-user application, in terms of the function/task it performs</xs:documentation>
					<xs:appinfo>
						<relation>one-to-many</relation>
						<label>Type of application</label>
						<usage>Show if application=yes; mandatory for applications</usage>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="workflow" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether the component is a workflow, i.e. consists of other components in a linear or branching execution</xs:documentation>
					<xs:appinfo>
						<label>Workflow</label>
						<label-plural>Workflows</label-plural>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="workflowDescription" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reserved for the description of workflow (most probably in Galaxy); provides information on the components that the workflow consists of and how it should be executed</xs:documentation>
					<xs:appinfo>
						<label>Workflow description</label>
						<label-plural>Workflow descriptions</label-plural>
						<usage>Show only if workflow=yes; mandatory for workflows</usage>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="distributionInfos">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:componentDistributionInfo" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="inputContentResourceInfo" type="ms:processingResourceInfoType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Groups together information on the requirements set on the input resource of a component</xs:documentation>
					<xs:appinfo>
						<label>Information on input</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="outputResourceInfo" type="ms:processingResourceInfoType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Groups together information on the output of a component</xs:documentation>
					<xs:appinfo>
						<label>Information on output</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="componentDependencies" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:typesystem" minOccurs="0">
							<xs:annotation>
								<xs:appinfo>
									<recommended>true</recommended>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ms:annotationSchema" minOccurs="0">
							<xs:annotation>
								<xs:appinfo>
									<recommended>true</recommended>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="annotationResources" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element ref="ms:annotationResource" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="softwareLibraries" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="requiresSoftware" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<!--
						<xs:element ref="ms:requiresHardware" minOccurs="0" maxOccurs="unbounded"/>-->
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- to be used for workflows -->
			<!--
			<xs:element name="componentParametrisedResources" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:typesystem" minOccurs="0"/>
						<xs:element name="model" type="ms:relatedResourceType" minOccurs="0"/>
						<xs:element ref="ms:tagset" minOccurs="0"/>
						<xs:element ref="ms:annotationResource" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
-->
			<xs:element ref="ms:componentCreationInfo">
				<xs:annotation>
					<xs:appinfo>
						<recommended>true</recommended>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="scmInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information about the SCM (Software Configuration Management, also called Source Code/Control Management or, succinctly, version control)</xs:documentation>
					<xs:appinfo>
						<label>SCM information</label>
						<commentsOnSource>taken as is from POM xml</commentsOnSource>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="connection" type="xs:string">
							<xs:annotation>
								<xs:documentation>The source control management system URL that describes the repository and how to connect to the repository.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="developerConnection" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Just like connection, but for developers, i.e. this scm connection will not be read only.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="tag" type="xs:string" default="HEAD" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The tag of current code. By default, it's set to HEAD during development.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="url" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The URL to the project's browsable SCM repository, such as ViewVC or Fisheye.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="issueManagementInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information about the issue tracking (or bug tracking) system used to manage the resource.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="system" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The name of the issue management system, e.g. Bugzilla</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="url" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>URL for the issue management system used by the project.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="relations" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:relationInfo" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ms:componentEvaluationInfo" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parameterInfoType">
		<xs:sequence>
			<xs:element name="parameterName" type="xs:string">
				<xs:annotation>
					<xs:documentation>A name used to identify the parameter</xs:documentation>
					<xs:appinfo>
						<label>Parameter name</label>
						<label-plural>Parameter names</label-plural>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="parameterLabel" type="xs:string">
				<xs:annotation>
					<xs:documentation>A label used to show to the user for the parameter</xs:documentation>
					<xs:appinfo>
						<label>Parameter label</label>
						<label-plural>Parameter labels</label-plural>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="parameterDescription" type="xs:string" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Provides a short account of the parameter (function it performs, input / output requirements etc.) in free text</xs:documentation>
					<xs:appinfo>
						<label>Description of the parameter</label>
						<label-plural>Descriptions of the parameter</label-plural>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="parameterType">
				<xs:annotation>
					<xs:documentation>Classifies the parameter according to a specific (not yet standardised) typing system (e.g. whether it's boolean, string, integer, a document, mapping etc.)</xs:documentation>
					<xs:appinfo>
						<label>Parameter type</label>
						<label-plural>Parameter types</label-plural>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="data"/>
						<xs:enumeration value="string">
							<xs:annotation>
								<xs:documentation>Value for parameter type, indicating that the parameter takes free text as input</xs:documentation>
								<xs:appinfo>
									<label>string</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="integer">
							<xs:annotation>
								<xs:documentation>Value for parameter type, indicating that the parameter takes integers as input</xs:documentation>
								<xs:appinfo>
									<label>integer</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="boolean">
							<xs:annotation>
								<xs:documentation>Value for parameter type, indicating that the parameter takes boolean values as input</xs:documentation>
								<xs:appinfo>
									<label>boolean</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="float">
							<xs:annotation>
								<xs:documentation>Value for parameter type, indicating that the parameter takes floating-point numbers as input</xs:documentation>
								<xs:appinfo>
									<label>float</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="other">
							<xs:annotation>
								<xs:documentation>Value for parameter type;  to be used when the desired value is not included in the listed values</xs:documentation>
								<xs:appinfo>
									<label>other</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="optional" type="xs:boolean" default="true">
				<xs:annotation>
					<xs:documentation>Specifies whether the parameter is mandatory or optional; the default value is set to true</xs:documentation>
					<xs:appinfo>
						<label>Optional</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="multiValue" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Specifies whether the parameter takes a list of values; the default value is set to false</xs:documentation>
					<xs:appinfo>
						<label>Multi-value</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="defaultValue" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Used for parameters that take a list of values in order to indicate the default value(s)</xs:documentation>
					<xs:appinfo>
						<label>Parameter default value</label>
						<label-plural>Parameter default values</label-plural>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="processingResourceInfoType">
		<xs:sequence>
			<xs:element name="processingResourceTypes">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="processingResourceType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>The type of the resource that a component takes as input or produces as output</xs:documentation>
								<xs:appinfo>
									<relation>one-to-many</relation>
									<label>Processing resource type</label>
									<label-plural>Processing resource types</label-plural>
									<default>document</default>
									<change>true</change>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
									<xs:enumeration value="corpus">
										<xs:annotation>
											<xs:documentation>For components that take as input or produce as output a set of documents (corpus)</xs:documentation>
											<xs:appinfo>
												<label>Corpus</label>
											</xs:appinfo>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="document">
										<xs:annotation>
											<xs:documentation>For components that take as input or produce as output a single document</xs:documentation>
											<xs:appinfo>
												<label>Document</label>
											</xs:appinfo>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="userInputText">
										<xs:annotation>
											<xs:documentation>For components that take as input a text typed in by the user</xs:documentation>
											<xs:appinfo>
												<label>User input text</label>
											</xs:appinfo>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="lexicalConceptualResource">
										<xs:annotation>
											<xs:documentation>For components that take as input a lexical or conceptual resource (e.g. lexicon, term list, ontology etc.) in order to perform operations on it (and not use it as an ancillary/reference resource, e.g. for annotating a document)</xs:documentation>
											<xs:appinfo>
												<label>Lexical/Conceptual resource</label>
											</xs:appinfo>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="languageDescription">
										<xs:annotation>
											<xs:documentation>For components that take as input a language description (e.g. a grammar) in order to perform operations on it (and not use it as an ancillary/reference resource, e.g. for parsing a document)</xs:documentation>
											<xs:appinfo>
												<label>Language description</label>
											</xs:appinfo>
										</xs:annotation>
									</xs:enumeration>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--
			<xs:element ref="ms:mediaType">
				<xs:annotation>
					<xs:documentation>The media type of the resource that a component takes as input or produces as output</xs:documentation>
					<xs:appinfo>
						<relation>one-to-many</relation>
						<label>Processing resource media type</label>
						<label-plural>Processing resource media types</label-plural>
						<default>text</default>
						<change>false</change>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
-->
			<xs:element name="dataFormats" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:dataFormatInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo>
									<recommended>true</recommended>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="characterEncodings" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:characterEncoding" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo>
									<recommended>true</recommended>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="languages" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:language" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo>
									<recommended>true</recommended>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ms:typesystem" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>
						<recommended>true</recommended>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ms:annotationSchema" minOccurs="0"/>
			<xs:element name="annotationLevels" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:annotationLevel" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo>
									<recommended>true</recommended>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ms:annotationResource" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>
						<recommended>true</recommended>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="parameterInfos" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:parameterInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="domains" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:domain" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo>
									<recommended>true</recommended>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--
			<xs:element name="textGenres" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:textGenre" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="textTypes" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:textType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="registers" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:register" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="subjects" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:subject" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
-->
			<xs:element name="keywords" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:keyword" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--
			<xs:element name="modalityTypes" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="ms:modalityType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
-->
			<xs:element ref="ms:samplesLocation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="componentEvaluationInfoType">
		<xs:sequence>
			<xs:element name="evaluated" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Indicates whether the component has been evaluated</xs:documentation>
					<xs:appinfo>
						<relation>one-to-one</relation>
						<label>Evaluated</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="evaluationLevels" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="evaluationLevel" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Indicates the evaluation level</xs:documentation>
								<xs:appinfo>
									<relation>one-to-many</relation>
									<label>Evaluation level</label>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
									<xs:enumeration value="technological"/>
									<xs:enumeration value="usage"/>
									<xs:enumeration value="impact"/>
									<xs:enumeration value="diagnostic"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="evaluationTypes" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="evaluationType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Indicates the evaluation type</xs:documentation>
								<xs:appinfo>
									<relation>one-to-many</relation>
									<label>Evaluation type</label>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="20"/>
									<xs:enumeration value="glassBox"/>
									<xs:enumeration value="blackBox"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="evaluationCriteria" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="evaluationCriterion" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Defines the criteria of the evaluation of a tool</xs:documentation>
								<xs:appinfo>
									<relation>one-to-many</relation>
									<label>Evaluation criteria</label>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
									<xs:enumeration value="extrinsic"/>
									<xs:enumeration value="intrinsic"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="evaluationMeasures" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="evaluationMeasure" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Defines whether the evaluation measure is human or automatic</xs:documentation>
								<xs:appinfo>
									<relation>one-to-many</relation>
									<label>Evaluation measure</label>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
									<xs:enumeration value="human"/>
									<xs:enumeration value="automatic"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="goldStandardLocation" type="ms:httpURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to the location of a Gold Standard dataset that can be used for evaluating the component</xs:documentation>
					<xs:appinfo>
						<label>Gold Standard Location</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="performanceIndicators" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="performanceIndicatorInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Information on metrics that can be used as performance indicators of the component</xs:documentation>
								<xs:appinfo>
									<label>Performance indicator</label>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="metric">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="MAD">
													<xs:annotation>
														<xs:documentation>Mean annotations per document</xs:documentation>
														<xs:appinfo>
															<label>Mean annotations per document</label>
														</xs:appinfo>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="MTDV">
													<xs:annotation>
														<xs:documentation>Mean time per document volume</xs:documentation>
														<xs:appinfo>
															<label>Mean time per document volume</label>
														</xs:appinfo>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="MTSA">
													<xs:annotation>
														<xs:documentation>Mean time seek annotations</xs:documentation>
														<xs:appinfo>
															<label>Mean time seek annotations</label>
														</xs:appinfo>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="ART">
													<xs:annotation>
														<xs:documentation>Average response time</xs:documentation>
														<xs:appinfo>
															<label>Average response time</label>
														</xs:appinfo>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="MTBF">
													<xs:annotation>
														<xs:documentation>Mean time between failures</xs:documentation>
														<xs:appinfo>
															<label>Mean time between failures</label>
														</xs:appinfo>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="MTTR">
													<xs:annotation>
														<xs:documentation>Mean time to repair</xs:documentation>
														<xs:appinfo>
															<label>Mean time to repair</label>
														</xs:appinfo>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="other">
													<xs:annotation>
														<xs:documentation>Value to be used when no other value is applicable</xs:documentation>
														<xs:appinfo>
															<label>Other</label>
														</xs:appinfo>
													</xs:annotation>
												</xs:enumeration>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="measure" type="xs:decimal">
										<xs:annotation>
											<xs:documentation>The measure calculated for the metric</xs:documentation>
											<xs:appinfo>
												<label>Measure</label>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="unit" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unit of measure for the metric</xs:documentation>
											<xs:appinfo>
												<label>Unit</label>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="evaluationReports" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="hasEvaluationReport" type="ms:relatedDocumentInfoType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A bibliographical record of or link to a report describing the evaluation process, tool, method etc. of the component</xs:documentation>
								<xs:appinfo>
									<recommended>true</recommended>
									<relation>many-to-many</relation>
									<label>Evaluation report</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="evaluationSwComponents" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="isEvaluatedBy" type="ms:relatedResourceType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>The identifier of the component used for the evaluation of the component being described</xs:documentation>
								<xs:appinfo>
									<recommended>true</recommended>
									<relation>many-to-many</relation>
									<label>Is evaluated by</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="evaluationDetails" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides further information on the evaluation process of a component</xs:documentation>
					<xs:appinfo>
						<recommended>true</recommended>
						<relation>one-to-one</relation>
						<label>Evaluation details</label>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="evaluators" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="evaluator" type="ms:actorInfoType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Groups information on person or organization that evaluated the component</xs:documentation>
								<xs:appinfo>
									<relation>many-to-many</relation>
									<label>Evaluator</label>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="componentOperationInfoType">
		<xs:sequence>
			<xs:element ref="ms:runningEnvironmentInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Groups together information on the running environment of a tool or a language description</xs:documentation>
					<xs:appinfo>
						<recommended>true</recommended>
						<relation>one-to-one</relation>
						<label>Running environment</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="runningTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gives information on the running time of a component</xs:documentation>
					<xs:appinfo>
						<relation>one-to-one</relation>
						<label>Running time</label>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="componentCreationInfoType">
		<xs:sequence>
			<xs:element name="framework">
				<xs:annotation>
					<xs:documentation>The framework used for developing and deploying the component</xs:documentation>
					<xs:appinfo>
						<label>framework</label>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="UIMA"/>
						<xs:enumeration value="GATE"/>
						<xs:enumeration value="AlvisNLP"/>
						<xs:enumeration value="other"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="formalism" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference (name, bibliographic reference or link to url) for the formalism used for the creation/enrichment of the resource (grammar or tool/service)</xs:documentation>
					<xs:appinfo>
						<relation>one-to-many</relation>
						<label>Formalism</label>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="ms:TDMMethod" minOccurs="0"/>
			<xs:element name="implementationLanguage" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The programming languages needed for allowing user contributions, or for running the tools, in case no executables are available</xs:documentation>
					<xs:appinfo>
						<recommended>true</recommended>
						<relation>one-to-many</relation>
						<label>Implementation language</label>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="ms:hasOriginalSource" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The name, the identifier or the url of thethe original resources that were at the base of the creation process of the resource</xs:documentation>
					<xs:appinfo>
						<relation>many-to-many</relation>
						<label>Original source</label>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="creationDetails" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides additional information on the creation of a component</xs:documentation>
					<xs:appinfo>
						<relation>one-to-one</relation>
						<label>Creation details</label>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- definition of elements -->
	<xs:element name="componentMetadataRecord">
		<xs:annotation>
			<xs:appinfo>
				<xs:label>Metadata record for components</xs:label>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ms:baseMetadataRecord">
					<xs:sequence>
						<xs:element ref="ms:componentInfo"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="componentInfo" type="ms:componentInfoType">
		<xs:annotation>
			<xs:documentation>Groups together all information related to software components</xs:documentation>
			<xs:appinfo>
				<label>Component</label>
			</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="parameterInfo" type="ms:parameterInfoType">
		<xs:annotation>
			<xs:documentation>Groups together information on each parameter of a component</xs:documentation>
			<xs:appinfo>
				<label>Parameter</label>
			</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="componentEvaluationInfo" type="ms:componentEvaluationInfoType">
		<xs:annotation>
			<xs:documentation>Groups together information on the evaluation status of a component</xs:documentation>
			<xs:appinfo>
				<label>Component evaluation</label>
			</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="componentOperationInfo" type="ms:componentOperationInfoType">
		<xs:annotation>
			<xs:documentation>Groups together information on the operation of a component</xs:documentation>
			<xs:appinfo>
				<label>Component operation</label>
			</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="componentCreationInfo" type="ms:componentCreationInfoType">
		<xs:annotation>
			<xs:documentation>Groups together information on the creation of a component</xs:documentation>
			<xs:appinfo>
				<label>Component creation</label>
			</xs:appinfo>
		</xs:annotation>
	</xs:element>
</xs:schema>
